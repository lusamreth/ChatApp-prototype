{"id":"rooms.html","dependencies":[{"name":"./main.css","dynamic":true,"resolved":"/coding/rust-projects/chatapp-prototype/static/main.css","parent":"/coding/rust-projects/chatapp-prototype/static/rooms.html"},{"name":"./utils.js","dynamic":true,"resolved":"/coding/rust-projects/chatapp-prototype/static/utils.js","parent":"/coding/rust-projects/chatapp-prototype/static/rooms.html"},{"name":"/coding/rust-projects/.babelrc","includedInParent":true,"mtime":1610169174041},{"name":"/coding/rust-projects/chatapp-prototype/static/package.json","includedInParent":true,"mtime":1610171978363},{"name":"_css_loader","parent":"/coding/rust-projects/chatapp-prototype/static/rooms.html","resolved":"/coding/rust-projects/chatapp-prototype/static/node_modules/parcel-bundler/src/builtins/css-loader.js"}],"generated":{"html":"<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <link rel=\"stylesheet\" href=\"/4abed1c996f46e1b2ad61757af46ece4.css\">\n    <title>Document</title>\n</head>\n<body>\n\n   <div class=\"external-wrapper\" id=\"first-page\">\n       <h1 class=\"label first-label\">Or choose the existing chatroom!</h1>\n       <div class=\"wrapper\">\n        <div class=\"header-class\" id=\"room-header\">\n         <div class=\"desc\">\n            <h1>Roomlists:</h1>\n            <p>Public lobby : </p>\n         </div>\n         <input type=\"text\" id=\"search-input\" placeholder=\"search rooms\">\n        </div>\n\n        <div id=\"room_list\" class=\"roomlist\"></div>\n        <p id=\"error-panel\"></p>\n\n       </div>\n   </div>\n    <div class=\"external-wrapper\" id=\"second-page\">\n        <div class=\"profile\">\n           <div class=\"circle-wrapper\">\n            <div class=\"circle\"><p id=\"user-abv\"></p></div>\n           </div>\n           <p id=\"user\"></p>\n        </div>\n       <div class=\"create_room\" id=\"create-room-panel\">\n           <h1 class=\"label\">Create your own private room chat!</h1>\n           <p id=\"input-error\"></p>\n           <input type=\"text\" placeholder=\"room-name\" id=\"roomname\">\n           <button id=\"submitroom\" class=\"hover-button\">\n            <p class=\"inner-text\">Submit</p> \n           </button>\n       </div>\n    </div>\n   <p class=\"toggle-class\" id=\"toggle-page\"></p>\n</body>\n<script src=\"/14ef994fa167d355bdaf9b44add54b87.js\"></script>\n<script>function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar room_list = document.getElementById(\"room_list\");\nvar room_name = \"roomname\";\nvar user;\n\nfunction verify_user() {\n  var p = localStorage.getItem(\"user\");\n  console.log(\"p\");\n  console.log(p['user_id']);\n\n  if (localStorage.getItem(\"user\")) {\n    user = JSON.parse(localStorage.getItem(\"user\"));\n    document.getElementById(\"user\").innerHTML = user.name;\n    document.getElementById(\"user-abv\").innerHTML = user.name[0].toUpperCase();\n  } else {\n    window.alert(\"please register as a user!\");\n    window.location = \"/static/login.html\";\n  }\n} // check if the user already existed in localStorage\n\n\nverify_user();\n\nfunction fetch_room(amount) {\n  ws.send(\"rooms\");\n  var i = 0;\n  room_list.innerHTML = \"\";\n\n  ws.onmessage = function (payload) {\n    var payload_json = JSON.parse(payload.data);\n    console.dir(payload.data);\n\n    if (detect_err(payload_json)) {\n      var err_payload = JSON.parse(payload.data);\n      console.log(\"sub_type\");\n      console.log(err_payload.sub_type);\n\n      if (err_payload.sub_type.toLowerCase() === \"/existinguser\") {\n        console.log(\"user is already joined!\");\n      }\n\n      return;\n    }\n\n    var id = payload_json.id,\n        room_name = payload_json.room_name,\n        participants = payload_json.participants,\n        capacity = payload_json.capacity;\n    i++;\n\n    if (i <= amount) {\n      room_list.innerHTML += \"<li class=\\\"room-\".concat(i, \" room\\\" id=\\\"room_item\\\">\").concat(room_name, \" \\n                <div class=\\\"room-info\\\"\\n                    <p>members :\\n                    \").concat(participants, \"/\").concat(capacity, \" \\n                    <button class=\\\"joinroom hover-button\\\" id=\\\"join_room-\").concat(i, \"]\\\" data-roomid=\\\"\").concat(id, \"\\\">\\n                        <p class=\\\"inner-text\\\"'>join</p></button> \\n                    </p>\\n                </div>\\n            </li>\");\n    } else {\n      console.log(\"done\");\n    }\n  };\n}\n\nvar input_err = document.getElementById(\"input-error\"); // toggle state for navigationaddEventListener\n// state : 0 -> first page visible\n// state : 1 -> second page visible\n// [-1,-2,-3,-4,-5,....]; the lesser the value\n// the further the page get!\n\nvar PopBack = /*#__PURE__*/function () {\n  function PopBack(dom) {\n    _classCallCheck(this, PopBack);\n\n    this.element = {\n      dom: dom,\n      toggle_state: false\n    };\n  }\n\n  _createClass(PopBack, [{\n    key: \"toggle_page\",\n    value: function toggle_page() {\n      this.element.toggle_state = !this.element.toggle_state;\n\n      if (this.element.toggle_state === true) {\n        this.close_page();\n      } else {\n        this.open_page();\n      }\n    }\n  }, {\n    key: \"close_page\",\n    value: function close_page() {\n      var first_page = this.element.dom;\n      first_page.classList.add(\"invisible\");\n      this.toggle_header();\n    }\n  }, {\n    key: \"open_page\",\n    value: function open_page() {\n      var _this = this;\n\n      var first_page = this.element.dom;\n      first_page.classList.remove(\"invisible\");\n      setTimeout(function () {\n        _this.toggle_header();\n      }, 110); //this.toggle_header();\n    }\n  }, {\n    key: \"toggle_header\",\n    value: function toggle_header() {\n      remove_header(this.element.toggle_state);\n    }\n  }]);\n\n  return PopBack;\n}();\n\nfunction remove_header(state) {\n  var header_class = document.getElementById(\"room-header\").classList;\n\n  if (state) {\n    header_class.add(\"empty-display\");\n  } else {\n    header_class.remove(\"empty-display\");\n  }\n}\n\nvar to_lobby = \"lobby &gt\";\nvar to_create_room = \"create room\";\nvar first_page = document.getElementById(\"first-page\");\nvar tp = document.getElementById(\"toggle-page\"); // main page navigation \n\nvar main_pg_nav = new PopBack(first_page);\ntp.innerHTML = to_create_room;\ntp.addEventListener(\"click\", function (e) {\n  // first page\n  if (main_pg_nav.element.toggle_state === true) {\n    tp.innerHTML = to_create_room;\n  } else {\n    tp.innerHTML = to_lobby;\n  }\n\n  main_pg_nav.toggle_page();\n});\n\nfunction init_joinbutton() {\n  // self notify function\n  var reset_time = 0;\n  reset_time += 1;\n\n  try {\n    var join_buttons = document.getElementsByClassName(\"joinroom\");\n\n    if (join_buttons.length === 0) {\n      setTimeout(function () {\n        init_joinbutton();\n      }, 100);\n    } else {\n      var _loop = function _loop(i) {\n        var roomid = join_buttons[i].dataset.roomid;\n        console.log(roomid);\n        var req_queue = [\"join:join_room/\".concat(roomid), \"signal:connect/\".concat(roomid)];\n        join_buttons[i].addEventListener(\"click\", function (e) {\n          e.preventDefault();\n          console.log(\"working!\");\n          var results = [];\n\n          if (Error === cont_req(req_queue, results)) {\n            console.log(\"this res\");\n          }\n\n          ;\n          console.log(results);\n        });\n      };\n\n      for (var i = 0; i < join_buttons.length; i++) {\n        _loop(i);\n      }\n    }\n  } catch (e) {\n    if (reset_time > 5) {\n      update_error(\"Cannot init buttons!\");\n      return;\n    }\n\n    console.log(e);\n    console.log(reset_time);\n  }\n}\n\nvar max = 100;\n\nfunction create_room_req(req, name) {\n  if (name.trim() == \"\") {\n    input_err.innerHTML = \"Please Enter the room name!\";\n    return;\n    asd;\n  } else {\n    input_err.innerHTML = \"\";\n  }\n\n  ws.send(\"\".concat(req).concat(name));\n\n  ws.onmessage = function (payload) {\n    console.log(payload);\n    var payload_json = JSON.parse(payload.data); // see if any error\n\n    if (detect_err(payload_json)) {\n      var err_subtype = payload_json.sub_type.toLowerCase();\n\n      if (err_subtype === \"/unknownuser\") {\n        window.location = \"/static/login.html\";\n      }\n\n      update_error(payload_json.error);\n    } else {\n      var user_id = payload_json.user_id,\n          creation_date = payload_json.creation_date;\n      fetch_room(max);\n      main_pg_nav.toggle_page();\n      return payload_json;\n    }\n  };\n}\n\nfunction waitsocket(socket, callback) {\n  // incase the socket has not been open\n  setTimeout(function () {\n    if (socket.readyState === 1) {\n      if (callback !== null) {\n        callback();\n      }\n    } else {\n      // rewait for the socket!\n      waitsocket(socket, callback);\n    }\n  }, 5);\n}\n\nws.onopen = function () {\n  fetch_room(max);\n  console.log(\"items\");\n  init_joinbutton();\n};\n\nvar extract_input = function extract_input() {\n  return document.getElementById(\"search-input\").value;\n};\n\nfunction search_room() {\n  var i = 0;\n  document.getElementById(\"search-input\").addEventListener(\"keyup\", function (e) {\n    e.preventDefault();\n    console.log(extract_input());\n    console.log(room_list.children);\n    var ele = room_list.children;\n\n    for (var _i = 0; _i < ele.length; _i++) {\n      var item = room_list.children[_i];\n\n      if (item.textContent === extract_input()) {\n        console.log(item);\n      }\n    }\n  });\n}\n\nsearch_room();\n\nfunction room_btn() {\n  var make_room_btn = built_ws_btn(\"submitroom\", create_room_req);\n  return make_room_btn(\"room:create_room/\", \"roomname\");\n}\n\ntry {\n  room_btn();\n} catch (e) {\n  console.log(e);\n  update_error(e); // e != null ? update_error(e) : null\n}\n\nfunction reveal_join() {\n  var rooms = room_list.children;\n\n  for (var i = 0; i++; i < rooms.length) {\n    var room = rooms.item(i);\n    console.log(\"room : \" + room);\n  }\n}\n\nvar mega_test = function mega_test(num) {\n  for (var i = 0; i < num; i++) {\n    ws.send(\"room:create_room/abababab\");\n\n    ws.onmessage = function (e) {\n      console.log(\"recieved!\");\n    }; //ws.onopen = () => {\n    //}\n\n  }\n}; // background-image:url(\"./static/Asuka.jpg\");</script>\n\n<style>* {\n  scrollbar-width: thin;\n  scrollbar-color: blue white;\n}\n*::-webkit-scrollbar {\n  width: 5px;\n  margin-left:50px;\n}\n*::-webkit-scrollbar-track {\n  background: orange;\n  border-radius:1rem;\n  width:0;\n}\n*::-webkit-scrollbar-thumb {\n  background-color: #333;\n  border-radius: 20px;\n}\n\n.profile {\n    display:flex;\n    align-items : center;\n    left : 30px;\n    top : 25px;\n    height:50px;\n    position: absolute;\n    z-index:100; \n    color : white;\n    /*border : 1px solid white;*/\n}\n.circle-wrapper {\n    padding:10px 16px;\n    position:relative;\n    border-radius : 20%;\n    background-color : red;\n}\n.circle {\n    display:flex;\n    height:100%;\n    align-items:center;\n    justify-content:center;\n    width : 100%;\n}\n.profile #user {\n    margin-left : 10px; \n    font-size: 1.2em;\n}\n\n#user-abv{\n    font-size : 1.3rem;\n}\n.external-wrapper:first-of-type {\n    position:absolute;\n    background-color : black;\n}\n\n.external-wrapper:nth-child(2){\n    background-color: #225061;\n}\n.external-wrapper{\n    transition: .3s ease-out;\n    background : white;\n    height:100vh;\n    width:100%;\n    display:flex;\n    z-index:2;\n    flex-direction: column;\n    justify-content:center;\n    align-items:center;\n}\n.create_room {\n    box-shadow:5px 5px 5px black;\n    background-color:white;\n    border-radius : 0.8rem;\n    background-color: white;\n    padding:1em;\n    border:1px solid black;\n    margin:15px;\n    max-width :500px;\n    display:flex;\n    width : 90%;\n    flex-direction: column;\n}\n\n#roomname {\n    padding:10px;\n    margin-bottom : 15px;\n}\n.create_room h1{\n    text-align: center;\n}\n.create_room button {\n    width : 50%;\n    margin : 0 auto;\n    padding : 10px;\n}\n.roomlist{\n    padding: 15px;\n    width:100%;\n    z-index:1;\n    margin-top:70px;\n}\n.label{\n    font-size: 1.6rem;\n    padding:10px 15px;\n}\n.first-label {\n    color:white;\n}\n.wrapper {\n    background-color: white;\n    margin:10px 55px;\n    min-height:450px;\n    max-width: 750px;\n    width:90%;\n    position:relative;\n    border-radius:.7rem;\n    border:1px solid black;\n    /* padding:1em; */\n    max-height: 450px;\n    overflow-y:scroll;\n}\n.header-class{\n    z-index:2;\n    background-color:green;\n    position:fixed;\n    padding:10px;\n    justify-content : space-between;\n    display:flex;\n    align-items:center;\n    width:90%;\n    transition:1.2s all;\n    height:75px;\n    max-width:745px;\n    line-height: 1.2;\n}\n.header-class.desc{\n    color:white;\n    width:100%;\n}\n.header-class h1{\n    font-size:1.4rem;\n}\n.header-class input {\n    margin-top:10px;\n    padding:10px;\n    max-width:400px;\n    width:100%;\n    border-radius:5px;\n}\n.room {\n    border: 1px solid black;\n    padding:0 5px;\n    display:flex;\n    z-index:1;\n    justify-content: space-between;\n    align-items: center;\n    flex-direction: row;\n}\n.room-info{\n    z-index:1;\n}\n@keyframes slidein {\n  from {\n    margin-left: 100%;\n    width: 300%; \n  }\n\n  to {\n    margin-left: 0%;\n    width: 100%;\n  }\n}\n/* room-join button */\n.joinroom {\n    margin:5px;\n    outline : none;\n}\nbutton {\n    outline:none;\n    color:white;\n    z-index:5;\n    border-radius: 10rem;\n    border:none;\n    padding: 8px 15px;\n    position: relative;\n}\n.room-info{\n    display:flex;\n}\n#input-error,panel-error {\n    color:red;\n}\n#input-error {\n    margin-bottom: 5px;\n}\n.toggle-class::before{\n   content:\"\";\n   height:2px;\n   background-color:white;\n   width:0;\n   bottom:0;\n   transition: .5s all;\n   position:absolute;\n}\n.toggle-class:hover::before {\n    width:100%;\n}\n.toggle-class{\n    font-size:1.4rem;\n    position:absolute;\n    color : white;\n    bottom : 0;\n    z-index:2;   \n    right : 0;\n    margin : 25px;\n}\n.invisible{\n    /* display:none; */\n    width:0;\n    overflow:hidden;\n    position:absolute;\n    border-bottom-left-radius: 20rem;\n    border-top-right-radius: 20rem;\n    border-bottom-right-radius: 10rem;\n    height:0;\n    will-change:height;\n}\n.empty-display{\n    display:none;\n}</style>\n</html>\n"},"sourceMaps":null,"error":null,"hash":"cfb7317bcd71c59453dc2a69c87b277f","cacheData":{"env":{}}}